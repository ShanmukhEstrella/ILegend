HTTP URL: 127.0.0.1:{{port_number}}/api/sql/v1/grammar/grammarToJson/batch

  This end point can take multiple SQL squeries(type: json) as the input and returns the Legend's internal JSON structure used to represent relational queries defined in Pure.

   For example:
   Input in ILegend Notebook:
    sql_to_json_batch
    SELECT * FROM customers;
    SELECT id, name FROM products

   Payload sent to the API:
       {
          "query1": {
              "value": "SELECT * FROM customers",
              "returnSourceInformation": true
            },
          "query2": {
              "value": "SELECT id, name FROM products",
              "returnSourceInformation": true
            }
      }


  Output in ILegend Notebook:
 {
  "errors": {},
  "result": {
    "query1": {
      "_type": "query",
      "orderBy": [],
      "queryBody": {
        "_type": "querySpecification",
        "from": [
          {
            "_type": "table",
            "name": {
              "parts": [
                "customers"
              ]
            }
          }
        ],
        "groupBy": [],
        "orderBy": [],
        "select": {
          "_type": "select",
          "distinct": false,
          "selectItems": [
            {
              "_type": "allColumns"
            }
          ]
        }
      }
    },
    "query2": {
      "_type": "query",
      "orderBy": [],
      "queryBody": {
        "_type": "querySpecification",
        "from": [
          {
            "_type": "table",
            "name": {
              "parts": [
                "products"
              ]
            }
          }
        ],
        "groupBy": [],
        "orderBy": [],
        "select": {
          "_type": "select",
          "distinct": false,
          "selectItems": [
            {
              "_type": "singleColumn",
              "expression": {
                "_type": "qualifiedNameReference",
                "name": {
                  "parts": [
                    "id"
                  ]
                }
              }
            },
            {
              "_type": "singleColumn",
              "expression": {
                "_type": "qualifiedNameReference",
                "name": {
                  "parts": [
                    "name"
                  ]
                }
              }
            }
          ]
        }
      }
    }
  }
}
